#!/bin/php
<?php

use Snap\Bootstrapper;
use Snap\Entity\Player;
use Snap\Exception\CardAlreadyInPlayException;
use Snap\Exception\PlayerHasNoCardsException;

require(__DIR__ . '/../vendor/autoload.php');

// Some bootstrapping to occur here
$bootstrapper = new Bootstrapper();
$monitor = $bootstrapper->boot();
$players = $monitor->getPlayers();

/**
 * @var Player $player
 */

print('-------------------------------------------' . PHP_EOL);

while (!$monitor->isGameOverConditionMet()) {
    foreach ($players as $player) {

        if ($monitor->hasMatchingCards()) {
            $winner = $monitor->determineFastestSnap();
            $cardsInPlayCount = $monitor->getCardsInPlayCount();
            $winner->doSnap($cardsInPlayCount);

            print('=================================================' . PHP_EOL);
            print('** SNAP! **' . PHP_EOL);
            print(''.$winner->getName().' gets '.$cardsInPlayCount.' cards.' . PHP_EOL);
            print('=================================================' . PHP_EOL);

            $monitor->clearCardsInPlay();

            sleep(5);
        }

        try {
            $playedCard = $monitor->addCardToPlay($player->getTopCard());
        } catch (CardAlreadyInPlayException $e) {
            continue;
        } catch (PlayerHasNoCardsException $e) {
            continue;
        }

        print($player->getName() . ' played card: '. $playedCard->getRank()->getName() . ' of ' . $playedCard->getSuit()->getName() . 's.' . PHP_EOL);

    }

    print('-------------------------------------------' . PHP_EOL);

    sleep(1);
}

print('The winner is '. $monitor->determineWinner()->getName() . '.' . PHP_EOL);

